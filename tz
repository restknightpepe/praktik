Техническое задание (ТЗ) на разработку сервиса сбора ошибок
  Введение
Цель проекта — разработка сервиса для сбора и обработки ошибок софта. Сервис должен предоставлять возможность сбора ошибок через API, сохранять их в базе данных и предоставлять интерфейс для взаимодействия с ними (просмотр, поиску по категориям и удалению). Приложение будет разработано на C# с использованием WPF для графического интерфейса пользователя.
  Описание системы
    Архитектура
Система состоит из следующих компонентов:
API для сбора ошибок — RESTful API, принимающее данные об ошибках. 
База данных — хранилище для сохранения информации об ошибках.
Приложение для взаимодействия с ошибками — WPF приложение для взаимодействия с хранимыми ошибками в бд путем просмотра, поиску по категориям и удаления.
  Основные функции
    Сбор ошибок через API:
Принятие данных об ошибке.
Сохранение данных в базу данных.
  Работа с базой данных:
Хранение данных об ошибках в структурированном виде.
Обеспечение быстрого доступа к данным.
  Интерфейс для взаимодействия с ошибками:
Просмотр списка ошибок.
Поиск по различным критериям (дата, уровень серьезности, источник и т.д.).
Удаление отдельных записей об ошибках.
Подробный просмотр информации об ошибке.
  Требования к системе
    Функциональные требования
  API:
Эндпоинты для получения и отправки данных.
  База данных:
Использование реляционной базы данных (SQL Server).
Схема базы данных для хранения ошибок (поля: ID, дата, уровень серьезности, сообщение об ошибке, стек вызовов, источник).
  Приложение:
WPF интерфейс с возможностью сортировки данных.
Возможность удаления записей.
Подробное отображение информации об ошибках.
Нефункциональные требования
  Юзабилити:
Удобный и интуитивно понятный интерфейс.
  Технические детали
    Технологии
Язык программирования: C#
Фреймворк для API: ASP.NET Core
Фреймворк для десктопного приложения: WPF
База данных: MSSQL
Протокол передачи данных: HTTP/HTTPS
  Этапы разработки
    Анализ и проектирование
Проектирование архитектуры системы и базы данных.
    Разработка
Создание базы данных и реализация модели данных.
Разработка WPF приложения для взаимодействия с ошибками.
Тестирование компонентов.
    Тестирование и отладка
Проведение модульных тестов.
Обнаружение и устранение багов.

